import 'package:event_board/data/model/enrollment.dart';
import 'package:event_board/data/model/event.dart';
import 'package:event_board/data/model/organization.dart';

class StaticData {
  static final List<Event> events = [
    Event(
      eventId: '1',
      title: 'Flutter Workshop',
      description: 'A hands-on workshop for Flutter beginners.',
      type: 'Workshop',
      bannerUrl: 'https://via.placeholder.com/300x150.png?text=Flutter+Workshop',
      startAt: DateTime.now().add(const Duration(days: 5)),
      endAt: DateTime.now().add(const Duration(days: 5, hours: 2)),
      venue: 'Online',
      meetLink: 'https://meet.google.com/abc-def-ghi',
      price: 0,
      capacity: 100,
      createdByUid: 'admin',
      approved: true,
      enrolledCount: 50,
      conflict: false,
      createdAt: DateTime.now(),
    ),
    Event(
      eventId: '2',
      title: 'React Workshop',
      description: 'A hands-on workshop for React beginners.',
      type: 'Workshop',
      bannerUrl: 'https://via.placeholder.com/300x150.png?text=React+Workshop',
      startAt: DateTime.now().add(const Duration(days: 10)),
      endAt: DateTime.now().add(const Duration(days: 10, hours: 3)),
      venue: 'Room 404',
      meetLink: '',
      price: 25.0,
      capacity: 50,
      createdByUid: 'admin',
      approved: true,
      enrolledCount: 25,
      conflict: false,
      createdAt: DateTime.now(),
    ),
    Event(
      eventId: '3',
      title: 'Design Thinking',
      description: 'A seminar on the principles of design thinking.',
      type: 'Seminar',
      bannerUrl: 'https://via.placeholder.com/300x150.png?text=Design+Thinking',
      startAt: DateTime.now().add(const Duration(days: 12)),
      endAt: DateTime.now().add(const Duration(days: 12, hours: 2)),
      venue: 'Auditorium',
      meetLink: '',
      price: 10.0,
      capacity: 200,
      createdByUid: 'admin',
      approved: true,
      enrolledCount: 150,
      conflict: false,
      createdAt: DateTime.now(),
    ),
  ];

  static final List<Organization> organizations = [
    Organization(
      orgId: '1',
      ownerUid: 'owner1',
      ownerFullName: 'John Doe',
      name: 'Google DSC',
      type: 'Tech Club',
      contactEmail: 'dsc@example.com',
      contactPhone: '123-456-7890',
      logoUrl: 'https://via.placeholder.com/150.png?text=DSC+Logo',
      bannerImageUrl: 'https://via.placeholder.com/400x200.png?text=DSC+Banner',
      approved: true,
      createdAt: DateTime.now(),
    ),
    Organization(
      orgId: '2',
      ownerUid: 'owner2',
      ownerFullName: 'Jane Smith',
      name: 'IEEE Student Branch',
      type: 'Professional',
      contactEmail: 'ieee@example.com',
      contactPhone: '098-765-4321',
      logoUrl: 'https://via.placeholder.com/150.png?text=IEEE+Logo',
      bannerImageUrl: 'https://via.placeholder.com/400x200.png?text=IEEE+Banner',
      approved: true,
      createdAt: DateTime.now(),
    ),
    Organization(
      orgId: '3',
      ownerUid: 'owner3',
      ownerFullName: 'Peter Jones',
      name: 'Rotaract Club',
      type: 'Social',
      contactEmail: 'rotaract@example.com',
      contactPhone: '111-222-3333',
      logoUrl: 'https://via.placeholder.com/150.png?text=Rotaract+Logo',
      bannerImageUrl: 'https://via.placeholder.com/400x200.png?text=Rotaract+Banner',
      approved: true,
      createdAt: DateTime.now(),
    ),
  ];

  static final List<Enrollment> enrollments = [
    Enrollment(
      enrollId: '1',
      studentUid: 'student1',
      registeredAt: DateTime.now().subtract(const Duration(days: 2)),
      status: 'registered',
      pricePaid: 0,
    ),
    Enrollment(
      enrollId: '2',
      studentUid: 'student1',
      registeredAt: DateTime.now().subtract(const Duration(days: 1)),
      status: 'checked_in',
      pricePaid: 25.0,
    ),
  ];
}